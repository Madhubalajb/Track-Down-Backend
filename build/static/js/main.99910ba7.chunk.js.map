{"version":3,"sources":["components/HabitForm.js","services/habit_services.js","components/TrackSheet.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["HabitForm","props","useState","selectedRadio","setSelectedRadio","handleRadio","event","habit_month","target","value","handleSelectedRadio","Modal","size","show","onHide","close","centered","Header","closeButton","Title","Body","Form","onSubmit","submit","Control","type","placeholder","onChange","habit_name","required","Container","className","Row","Check","label","checked","Button","url","getData","a","axios","get","response","data","addData","habit","post","deleteData","habit_id","delete","updateData","put","TrackSheet","local_activity","setLocalActivity","saveBtnRef","useRef","habit_activity","length","Card","map","index","title","onClick","array","habit_track","current","style","visibility","day","id","temp","handleActivity","ref","changes","habitService","saveChanges","Home","daysInMonth","January","February","March","April","May","June","July","August","September","October","November","December","setShow","habitName","setHabitName","habitMonth","setHabitMonth","setHabitActivity","useEffect","then","Col","preventDefault","Promise","resolve","reject","dummyArray","i","push","newHabit","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99910ba7.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Modal, Button, Row, Form, Container} from 'react-bootstrap'\r\n\r\nconst HabitForm = (props) => {\r\n    const [selectedRadio, setSelectedRadio] = useState('')\r\n    \r\n    const handleSelectedRadio = (event) => setSelectedRadio(event.target.value)\r\n\r\n    const handleRadio = (event) => {\r\n        props.habit_month(event)\r\n        handleSelectedRadio(event)\r\n    }\r\n\r\n    return (\r\n        <Modal size=\"md\" show={props.show} onHide={props.close} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Habit Tracker</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={props.submit}>\r\n                    <h6><span>1</span> Take an Habit</h6>\r\n                    <Form.Control type=\"text\" placeholder=\"What are you gonna build ?\" onChange={props.habit_name} required/>\r\n                    <h6><span>2</span> Choose a month</h6>\r\n                    <Container className=\"months\">\r\n                        <Row>\r\n                            <Form.Check type=\"radio\" value=\"January\" label=\"January\" checked={selectedRadio === \"January\"} onChange={handleRadio}/>\r\n                            <Form.Check type=\"radio\" value=\"February\" label=\"February\" checked={selectedRadio === \"February\"} onChange={handleRadio}/>\r\n                            <Form.Check type=\"radio\" value=\"March\" label=\"March\" checked={selectedRadio === \"March\"} onChange={handleRadio}/>\r\n                            <Form.Check type=\"radio\" value=\"April\" label=\"April\" checked={selectedRadio === \"April\"} onChange={handleRadio}/>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Check type=\"radio\" value=\"May\" label=\"May\" checked={selectedRadio === \"May\"} onChange={handleRadio}/>\r\n                            <Form.Check type=\"radio\" value=\"June\" label=\"June\" checked={selectedRadio === \"June\"} onChange={handleRadio}/>\r\n                            <Form.Check type=\"radio\" value=\"July\" label=\"July\" checked={selectedRadio === \"July\"} onChange={handleRadio}/>\r\n                            <Form.Check type=\"radio\" value=\"August\" label=\"August\" checked={selectedRadio === \"August\"} onChange={handleRadio}/>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Check type=\"radio\" value=\"September\" label=\"September\" checked={selectedRadio === \"September\"} onChange={handleRadio}/>\r\n                            <Form.Check type=\"radio\" value=\"October\" label=\"October\" checked={selectedRadio === \"October\"} onChange={handleRadio}/>\r\n                            <Form.Check type=\"radio\" value=\"November\" label=\"November\" checked={selectedRadio === \"November\"} onChange={handleRadio}/>\r\n                            <Form.Check type=\"radio\" value=\"December\" label=\"December\" checked={selectedRadio === \"December\"} onChange={handleRadio}/>\r\n                        </Row>\r\n                    </Container>\r\n                    <center><Button type=\"submit\">Track Down</Button></center>\r\n                </Form>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default HabitForm","import axios from 'axios'\r\nconst url = '/api/habits'\r\n\r\nconst getData = async () => {\r\n    const response = await axios.get(url)\r\n    return response.data\r\n}\r\n\r\nconst addData = async (habit) => {\r\n    const response = await axios.post(url, habit)\r\n    return response.data\r\n}\r\n\r\nconst deleteData = async (habit_id) => {\r\n    const response = await axios.delete(`${url}/${habit_id}`)\r\n    return response.data\r\n}\r\n\r\nconst updateData = async (habit_id, habit) => {\r\n    const response = await axios.put(`${url}/${habit_id}`, habit)\r\n    return response.data\r\n}\r\n\r\nexport default { getData, addData, deleteData, updateData}","import React, { useRef, useState } from 'react'\r\nimport {Card, Col, Button} from 'react-bootstrap'\r\nimport habitService from '../services/habit_services'\r\n\r\nconst TrackSheet = (props) => {\r\n    const [local_activity, setLocalActivity] = useState([])\r\n    const saveBtnRef = useRef(null)\r\n    \r\n    const handleVisibility = (array) => {\r\n        setLocalActivity(array)\r\n        saveBtnRef.current.style.visibility = 'visible'\r\n    } \r\n\r\n    const handleActivity = (day) => {\r\n        const temp = [...local_activity]\r\n        temp[day] = !temp[day]\r\n        setLocalActivity(temp)\r\n    }\r\n\r\n    const saveChanges = (habit_id) => {\r\n        const changes = {\r\n            habit_track: local_activity\r\n        }\r\n        habitService.updateData(habit_id, changes)\r\n        setLocalActivity([])\r\n        saveBtnRef.current.style.visibility = 'hidden'\r\n    }\r\n\r\n    const showHabitActivity = () => props.habit_activity.map((habit, index) => {  \r\n        return (\r\n            <Card>\r\n                <h5>{habit.habit_name} - {habit.habit_month}</h5>\r\n                <Card.Body>\r\n                    <i className=\"material-icons\" title=\"Edit your activities\" onClick={() => handleVisibility(habit.habit_track)}>edit</i>\r\n                    {\r\n                        habit.habit_track.map((day, index) => {\r\n                            return (\r\n                                <input type=\"button\" value={index + 1} id={index + 1} onClick={() => handleActivity(index + 1)}/>\r\n                            )\r\n                        })\r\n                    }\r\n                    <Button ref={saveBtnRef} style={{visibility: 'hidden'}} onClick={() => saveChanges(habit.id)}>Save</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    })\r\n\r\n    if(props.habit_activity.length === 0) {\r\n        return (\r\n            <Card>\r\n                <h5>Sample - January</h5>\r\n            </Card>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                {showHabitActivity()}\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TrackSheet","import React, { useState, useEffect } from 'react'\r\nimport { Container, Card, Row, Col} from 'react-bootstrap'\r\nimport HabitForm from './HabitForm'\r\nimport TrackSheet from './TrackSheet'\r\nimport habitService from '../services/habit_services'\r\n\r\nconst Home = () => {\r\n    const daysInMonth = {\r\n        January: 31,\r\n        February: 28,\r\n        March: 31,\r\n        April: 30,\r\n        May: 31,\r\n        June: 30,\r\n        July: 31,\r\n        August: 31,\r\n        September: 30,\r\n        October: 31,\r\n        November: 30,\r\n        December: 31 \r\n    }\r\n    const [show, setShow] = useState(false)\r\n    const [habitName, setHabitName] = useState('') \r\n    const [habitMonth, setHabitMonth] = useState('')\r\n    const [habit_activity, setHabitActivity] = useState([])\r\n\r\n    useEffect(() => {\r\n        habitService.getData()\r\n        .then(data => setHabitActivity(data))\r\n    })\r\n\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    const handleHabitName = (event) => setHabitName(event.target.value)\r\n    const handleHabitMonth = (event) => setHabitMonth(event.target.value)\r\n    \r\n    const makeStateNull = () => {\r\n        setHabitName('')\r\n        setHabitMonth('')\r\n    }\r\n\r\n    function handleActivity() {\r\n        return new Promise((resolve, reject) => {\r\n            const dummyArray = []\r\n            for(let i = 1; i <= daysInMonth[habitMonth]; i++) {\r\n                dummyArray.push(false)\r\n            }\r\n            if(dummyArray.length !== 0) {\r\n                resolve(dummyArray)\r\n            }\r\n        })\r\n    }\r\n    \r\n    const submitHabit = (event) => {\r\n        event.preventDefault()\r\n        handleActivity().then(data => {\r\n            const newHabit = {\r\n                habit_name: habitName,\r\n                habit_month: habitMonth,\r\n                habit_track: data\r\n            }\r\n            habitService.addData(newHabit)\r\n            makeStateNull()\r\n            setShow(false)\r\n        }) \r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <p>Add a new habit to track</p>\r\n                            <center>\r\n                                <i className=\"material-icons\" title=\"Add Habit\" onClick={handleShow}>add_circle</i>\r\n                            </center>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <HabitForm show={show} close={handleClose} habit_name={handleHabitName} habit_month={handleHabitMonth} submit={submitHabit}/>\r\n                </Col>\r\n                <Col>\r\n                    <TrackSheet daysInMonth={daysInMonth} habit_activity={habit_activity}/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home","import Home from './components/Home'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}